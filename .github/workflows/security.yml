name: Security Analysis

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test,dev]"

    - name: Run comprehensive security scan
      run: |
        # Run all security tools with SARIF output where possible
        bandit -r mcp_duckduckgo/ -c pyproject.toml -f sarif -o bandit.sarif || echo '{
          "version": "2.1.0",
          "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
          "runs": [{
            "tool": {
              "driver": {
                "name": "bandit",
                "version": "1.0.0"
              }
            },
            "results": []
          }]
        }' > bandit.sarif
        bandit -r mcp_duckduckgo/ -c pyproject.toml
        
        safety check --json --output safety.json || echo '{}' > safety.json
        safety check
        
        pip-audit --format=json --output=pip-audit.json || echo '{}' > pip-audit.json
        pip-audit
        
        semgrep --config=auto --sarif --output=semgrep.sarif mcp_duckduckgo/ || echo '{
          "version": "2.1.0",
          "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
          "runs": [{
            "tool": {
              "driver": {
                "name": "semgrep",
                "version": "1.0.0"
              }
            },
            "results": []
          }]
        }' > semgrep.sarif
        semgrep --config=auto mcp_duckduckgo/

    - name: Upload Bandit SARIF
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: bandit.sarif
        category: bandit

    - name: Upload Semgrep SARIF
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep.sarif
        category: semgrep

    - name: Upload security artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: |
          bandit.sarif
          safety.json
          pip-audit.json
          semgrep.sarif
        retention-days: 90

  license-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: License check
      uses: fossa-contrib/fossa-action@v3
      with:
        api-key: ${{ secrets.FOSSA_API_KEY }}
      continue-on-error: true

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for secret scanning

    - name: Run Trufflehog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified