name: Maintenance

on:
  schedule:
    - cron: '0 4 * * 0'  # Weekly on Sunday at 4 AM UTC
  workflow_dispatch:

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Update pre-commit hooks
      run: |
        pip install pre-commit
        pre-commit autoupdate

    - name: Check for outdated packages
      run: |
        pip install pip-check
        pip-check --not-required --hide-unchanged || true

    - name: Create maintenance PR
      uses: peter-evans/create-pull-request@v6
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: automated maintenance updates"
        title: "ðŸ§¹ Weekly maintenance updates"
        body: |
          ## Automated Maintenance Updates
          
          This PR contains automated maintenance updates:
          - Pre-commit hook version updates
          - Dependency status check
          
          **Review Required**: Please check all changes before merging.
          
          Generated by: ${{ github.workflow }} workflow
        branch: maintenance/weekly-updates
        delete-branch: true

  code-quality-report:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[test,dev]"

    - name: Generate quality report
      run: |
        echo "# Code Quality Report" > quality-report.md
        echo "Generated on: $(date)" >> quality-report.md
        echo "" >> quality-report.md
        
        echo "## Code Statistics" >> quality-report.md
        echo '```' >> quality-report.md
        find mcp_duckduckgo/ -name "*.py" -exec wc -l {} + | tail -1 >> quality-report.md
        echo '```' >> quality-report.md
        echo "" >> quality-report.md
        
        echo "## Dead Code Analysis" >> quality-report.md
        echo '```' >> quality-report.md
        vulture mcp_duckduckgo/ --min-confidence 80 || echo "No dead code found" >> quality-report.md
        echo '```' >> quality-report.md
        echo "" >> quality-report.md
        
        echo "## Type Coverage" >> quality-report.md
        echo '```' >> quality-report.md
        mypy mcp_duckduckgo/ --ignore-missing-imports --any-exprs-report=type-report.txt || true
        cat type-report.txt 2>/dev/null || echo "Type coverage analysis complete" >> quality-report.md
        echo '```' >> quality-report.md

    - name: Upload quality report
      uses: actions/upload-artifact@v4
      with:
        name: quality-report
        path: quality-report.md
        retention-days: 30

  cleanup-artifacts:
    runs-on: ubuntu-latest
    steps:
    - name: Cleanup old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId,
          });
          
          const oldArtifacts = artifacts.data.artifacts.filter(artifact => {
            const created = new Date(artifact.created_at);
            const daysOld = (Date.now() - created.getTime()) / (1000 * 60 * 60 * 24);
            return daysOld > 90;
          });
          
          for (const artifact of oldArtifacts) {
            await github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
            });
          }